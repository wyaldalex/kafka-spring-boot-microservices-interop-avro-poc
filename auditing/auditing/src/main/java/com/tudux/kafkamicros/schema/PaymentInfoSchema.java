/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.tudux.kafkamicros.schema;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class PaymentInfoSchema extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5453995003023984593L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PaymentInfoSchema\",\"namespace\":\"com.tudux.kafkamicros.schema\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bankId\",\"type\":\"string\"},{\"name\":\"accountOriginNumber\",\"type\":\"string\"},{\"name\":\"accountTargetNumber\",\"type\":\"string\"},{\"name\":\"senderId\",\"type\":\"string\"},{\"name\":\"receiverId\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PaymentInfoSchema> ENCODER =
      new BinaryMessageEncoder<PaymentInfoSchema>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PaymentInfoSchema> DECODER =
      new BinaryMessageDecoder<PaymentInfoSchema>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PaymentInfoSchema> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PaymentInfoSchema> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PaymentInfoSchema> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PaymentInfoSchema>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PaymentInfoSchema to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PaymentInfoSchema from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PaymentInfoSchema instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PaymentInfoSchema fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private long id;
   private java.lang.CharSequence bankId;
   private java.lang.CharSequence accountOriginNumber;
   private java.lang.CharSequence accountTargetNumber;
   private java.lang.CharSequence senderId;
   private java.lang.CharSequence receiverId;
   private java.lang.CharSequence amount;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PaymentInfoSchema() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param bankId The new value for bankId
   * @param accountOriginNumber The new value for accountOriginNumber
   * @param accountTargetNumber The new value for accountTargetNumber
   * @param senderId The new value for senderId
   * @param receiverId The new value for receiverId
   * @param amount The new value for amount
   */
  public PaymentInfoSchema(java.lang.Long id, java.lang.CharSequence bankId, java.lang.CharSequence accountOriginNumber, java.lang.CharSequence accountTargetNumber, java.lang.CharSequence senderId, java.lang.CharSequence receiverId, java.lang.CharSequence amount) {
    this.id = id;
    this.bankId = bankId;
    this.accountOriginNumber = accountOriginNumber;
    this.accountTargetNumber = accountTargetNumber;
    this.senderId = senderId;
    this.receiverId = receiverId;
    this.amount = amount;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return bankId;
    case 2: return accountOriginNumber;
    case 3: return accountTargetNumber;
    case 4: return senderId;
    case 5: return receiverId;
    case 6: return amount;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: bankId = (java.lang.CharSequence)value$; break;
    case 2: accountOriginNumber = (java.lang.CharSequence)value$; break;
    case 3: accountTargetNumber = (java.lang.CharSequence)value$; break;
    case 4: senderId = (java.lang.CharSequence)value$; break;
    case 5: receiverId = (java.lang.CharSequence)value$; break;
    case 6: amount = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'bankId' field.
   * @return The value of the 'bankId' field.
   */
  public java.lang.CharSequence getBankId() {
    return bankId;
  }


  /**
   * Sets the value of the 'bankId' field.
   * @param value the value to set.
   */
  public void setBankId(java.lang.CharSequence value) {
    this.bankId = value;
  }

  /**
   * Gets the value of the 'accountOriginNumber' field.
   * @return The value of the 'accountOriginNumber' field.
   */
  public java.lang.CharSequence getAccountOriginNumber() {
    return accountOriginNumber;
  }


  /**
   * Sets the value of the 'accountOriginNumber' field.
   * @param value the value to set.
   */
  public void setAccountOriginNumber(java.lang.CharSequence value) {
    this.accountOriginNumber = value;
  }

  /**
   * Gets the value of the 'accountTargetNumber' field.
   * @return The value of the 'accountTargetNumber' field.
   */
  public java.lang.CharSequence getAccountTargetNumber() {
    return accountTargetNumber;
  }


  /**
   * Sets the value of the 'accountTargetNumber' field.
   * @param value the value to set.
   */
  public void setAccountTargetNumber(java.lang.CharSequence value) {
    this.accountTargetNumber = value;
  }

  /**
   * Gets the value of the 'senderId' field.
   * @return The value of the 'senderId' field.
   */
  public java.lang.CharSequence getSenderId() {
    return senderId;
  }


  /**
   * Sets the value of the 'senderId' field.
   * @param value the value to set.
   */
  public void setSenderId(java.lang.CharSequence value) {
    this.senderId = value;
  }

  /**
   * Gets the value of the 'receiverId' field.
   * @return The value of the 'receiverId' field.
   */
  public java.lang.CharSequence getReceiverId() {
    return receiverId;
  }


  /**
   * Sets the value of the 'receiverId' field.
   * @param value the value to set.
   */
  public void setReceiverId(java.lang.CharSequence value) {
    this.receiverId = value;
  }

  /**
   * Gets the value of the 'amount' field.
   * @return The value of the 'amount' field.
   */
  public java.lang.CharSequence getAmount() {
    return amount;
  }


  /**
   * Sets the value of the 'amount' field.
   * @param value the value to set.
   */
  public void setAmount(java.lang.CharSequence value) {
    this.amount = value;
  }

  /**
   * Creates a new PaymentInfoSchema RecordBuilder.
   * @return A new PaymentInfoSchema RecordBuilder
   */
  public static com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder newBuilder() {
    return new com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder();
  }

  /**
   * Creates a new PaymentInfoSchema RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PaymentInfoSchema RecordBuilder
   */
  public static com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder newBuilder(com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder other) {
    if (other == null) {
      return new com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder();
    } else {
      return new com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder(other);
    }
  }

  /**
   * Creates a new PaymentInfoSchema RecordBuilder by copying an existing PaymentInfoSchema instance.
   * @param other The existing instance to copy.
   * @return A new PaymentInfoSchema RecordBuilder
   */
  public static com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder newBuilder(com.tudux.kafkamicros.schema.PaymentInfoSchema other) {
    if (other == null) {
      return new com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder();
    } else {
      return new com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder(other);
    }
  }

  /**
   * RecordBuilder for PaymentInfoSchema instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PaymentInfoSchema>
    implements org.apache.avro.data.RecordBuilder<PaymentInfoSchema> {

    private long id;
    private java.lang.CharSequence bankId;
    private java.lang.CharSequence accountOriginNumber;
    private java.lang.CharSequence accountTargetNumber;
    private java.lang.CharSequence senderId;
    private java.lang.CharSequence receiverId;
    private java.lang.CharSequence amount;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.bankId)) {
        this.bankId = data().deepCopy(fields()[1].schema(), other.bankId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.accountOriginNumber)) {
        this.accountOriginNumber = data().deepCopy(fields()[2].schema(), other.accountOriginNumber);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.accountTargetNumber)) {
        this.accountTargetNumber = data().deepCopy(fields()[3].schema(), other.accountTargetNumber);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.senderId)) {
        this.senderId = data().deepCopy(fields()[4].schema(), other.senderId);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.receiverId)) {
        this.receiverId = data().deepCopy(fields()[5].schema(), other.receiverId);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.amount)) {
        this.amount = data().deepCopy(fields()[6].schema(), other.amount);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing PaymentInfoSchema instance
     * @param other The existing instance to copy.
     */
    private Builder(com.tudux.kafkamicros.schema.PaymentInfoSchema other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.bankId)) {
        this.bankId = data().deepCopy(fields()[1].schema(), other.bankId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.accountOriginNumber)) {
        this.accountOriginNumber = data().deepCopy(fields()[2].schema(), other.accountOriginNumber);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.accountTargetNumber)) {
        this.accountTargetNumber = data().deepCopy(fields()[3].schema(), other.accountTargetNumber);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.senderId)) {
        this.senderId = data().deepCopy(fields()[4].schema(), other.senderId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.receiverId)) {
        this.receiverId = data().deepCopy(fields()[5].schema(), other.receiverId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.amount)) {
        this.amount = data().deepCopy(fields()[6].schema(), other.amount);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'bankId' field.
      * @return The value.
      */
    public java.lang.CharSequence getBankId() {
      return bankId;
    }


    /**
      * Sets the value of the 'bankId' field.
      * @param value The value of 'bankId'.
      * @return This builder.
      */
    public com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder setBankId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.bankId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'bankId' field has been set.
      * @return True if the 'bankId' field has been set, false otherwise.
      */
    public boolean hasBankId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'bankId' field.
      * @return This builder.
      */
    public com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder clearBankId() {
      bankId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'accountOriginNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getAccountOriginNumber() {
      return accountOriginNumber;
    }


    /**
      * Sets the value of the 'accountOriginNumber' field.
      * @param value The value of 'accountOriginNumber'.
      * @return This builder.
      */
    public com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder setAccountOriginNumber(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.accountOriginNumber = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'accountOriginNumber' field has been set.
      * @return True if the 'accountOriginNumber' field has been set, false otherwise.
      */
    public boolean hasAccountOriginNumber() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'accountOriginNumber' field.
      * @return This builder.
      */
    public com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder clearAccountOriginNumber() {
      accountOriginNumber = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'accountTargetNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getAccountTargetNumber() {
      return accountTargetNumber;
    }


    /**
      * Sets the value of the 'accountTargetNumber' field.
      * @param value The value of 'accountTargetNumber'.
      * @return This builder.
      */
    public com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder setAccountTargetNumber(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.accountTargetNumber = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'accountTargetNumber' field has been set.
      * @return True if the 'accountTargetNumber' field has been set, false otherwise.
      */
    public boolean hasAccountTargetNumber() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'accountTargetNumber' field.
      * @return This builder.
      */
    public com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder clearAccountTargetNumber() {
      accountTargetNumber = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'senderId' field.
      * @return The value.
      */
    public java.lang.CharSequence getSenderId() {
      return senderId;
    }


    /**
      * Sets the value of the 'senderId' field.
      * @param value The value of 'senderId'.
      * @return This builder.
      */
    public com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder setSenderId(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.senderId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'senderId' field has been set.
      * @return True if the 'senderId' field has been set, false otherwise.
      */
    public boolean hasSenderId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'senderId' field.
      * @return This builder.
      */
    public com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder clearSenderId() {
      senderId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'receiverId' field.
      * @return The value.
      */
    public java.lang.CharSequence getReceiverId() {
      return receiverId;
    }


    /**
      * Sets the value of the 'receiverId' field.
      * @param value The value of 'receiverId'.
      * @return This builder.
      */
    public com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder setReceiverId(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.receiverId = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'receiverId' field has been set.
      * @return True if the 'receiverId' field has been set, false otherwise.
      */
    public boolean hasReceiverId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'receiverId' field.
      * @return This builder.
      */
    public com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder clearReceiverId() {
      receiverId = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'amount' field.
      * @return The value.
      */
    public java.lang.CharSequence getAmount() {
      return amount;
    }


    /**
      * Sets the value of the 'amount' field.
      * @param value The value of 'amount'.
      * @return This builder.
      */
    public com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder setAmount(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.amount = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'amount' field has been set.
      * @return True if the 'amount' field has been set, false otherwise.
      */
    public boolean hasAmount() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'amount' field.
      * @return This builder.
      */
    public com.tudux.kafkamicros.schema.PaymentInfoSchema.Builder clearAmount() {
      amount = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PaymentInfoSchema build() {
      try {
        PaymentInfoSchema record = new PaymentInfoSchema();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.bankId = fieldSetFlags()[1] ? this.bankId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.accountOriginNumber = fieldSetFlags()[2] ? this.accountOriginNumber : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.accountTargetNumber = fieldSetFlags()[3] ? this.accountTargetNumber : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.senderId = fieldSetFlags()[4] ? this.senderId : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.receiverId = fieldSetFlags()[5] ? this.receiverId : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.amount = fieldSetFlags()[6] ? this.amount : (java.lang.CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PaymentInfoSchema>
    WRITER$ = (org.apache.avro.io.DatumWriter<PaymentInfoSchema>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PaymentInfoSchema>
    READER$ = (org.apache.avro.io.DatumReader<PaymentInfoSchema>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.id);

    out.writeString(this.bankId);

    out.writeString(this.accountOriginNumber);

    out.writeString(this.accountTargetNumber);

    out.writeString(this.senderId);

    out.writeString(this.receiverId);

    out.writeString(this.amount);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.id = in.readLong();

      this.bankId = in.readString(this.bankId instanceof Utf8 ? (Utf8)this.bankId : null);

      this.accountOriginNumber = in.readString(this.accountOriginNumber instanceof Utf8 ? (Utf8)this.accountOriginNumber : null);

      this.accountTargetNumber = in.readString(this.accountTargetNumber instanceof Utf8 ? (Utf8)this.accountTargetNumber : null);

      this.senderId = in.readString(this.senderId instanceof Utf8 ? (Utf8)this.senderId : null);

      this.receiverId = in.readString(this.receiverId instanceof Utf8 ? (Utf8)this.receiverId : null);

      this.amount = in.readString(this.amount instanceof Utf8 ? (Utf8)this.amount : null);

    } else {
      for (int i = 0; i < 7; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.id = in.readLong();
          break;

        case 1:
          this.bankId = in.readString(this.bankId instanceof Utf8 ? (Utf8)this.bankId : null);
          break;

        case 2:
          this.accountOriginNumber = in.readString(this.accountOriginNumber instanceof Utf8 ? (Utf8)this.accountOriginNumber : null);
          break;

        case 3:
          this.accountTargetNumber = in.readString(this.accountTargetNumber instanceof Utf8 ? (Utf8)this.accountTargetNumber : null);
          break;

        case 4:
          this.senderId = in.readString(this.senderId instanceof Utf8 ? (Utf8)this.senderId : null);
          break;

        case 5:
          this.receiverId = in.readString(this.receiverId instanceof Utf8 ? (Utf8)this.receiverId : null);
          break;

        case 6:
          this.amount = in.readString(this.amount instanceof Utf8 ? (Utf8)this.amount : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










